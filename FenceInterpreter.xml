<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<!-- Fence Interpreter by Reva                                    -->
<!-- Specs: Adds simple dollar value at the end of Fence offer.   -->
<!--        Display session total earned including current offer. -->
<!--        Does NOT save.                                        -->
<!-- v1.1 - Bugfix on coins with with non-English style multiples.  Thanks Charon for pointing it out!  -->

<muclient>
<plugin
   name="RevaFenceConverter"
   author="Reva"
   id="f4dedde24be6a4a429c562c4"
   language="Lua"
   purpose="Convert Fence Offer to $"
   date_written="2019-07-23"
   requires="4.84"
   version="1.1"
   >
</plugin>
<!--  Aliases  -->
<aliases>
</aliases>
<script>
<![CDATA[
cLowColour = "black"
cMediumColour = "dodgerblue"
cHighColour = "limegreen"

iMediumValue = 50
iHighValue = 100

CoinValuesByCity = {
["Agatean Empire"] = {["saveloy-rhinu"] = 4, ["quarter-rhinu"] = 120, ["half-rhinu"] = 240, ["rhinu"] = 480, ["ten-rhinu"] = 4800, ["fifty-rhinu"] = 24000},
["Ankh-Morpork"] = {["penny"] = 4, ["pence"] = 4, ["ten-pence"] = 40, ["half-dollar"] = 200, ["dollar"] = 400, ["ten-dollar"] = 4000, ["royal"] = 40000, ["crown"] = 3200000},
["Djelian"] = {["ptascp"] = 2, ["ptascpi"] = 2, ["talon"] = 20, ["talona"] = 20, ["toon"] = 200, ["tooni"] = 200, ["talent"] = 2000, ["ra"] = 20000, ["thanra"] = 100000},
["Ephebian"] = {["derechmus"] = 2, ["derechmi"] = 2, ["hemiobolus"] = 8, ["hemioboli"] = 8, ["obolus"] = 16, ["oboli"] = 16, ["drachma"] = 96, ["drachmae"] = 96, ["stater"] = 192, ["decadrachma"] = 960, ["decadrachmae"] = 960, ["mina"] = 9600, ["minae"] = 9600, ["tyrant"] = 96000},
["Genuan"] = {["cent"] = 3, ["livre"] = 300, ["forin"] = 3000, ["ducat"] = 30000},
["Klatchian"] = {["para"] = 5, ["two para"] = 10, ["five para"] = 25, ["ten para"] = 50, ["fifty para"] = 250, ["dinar"] = 500, ["two dinar"] = 1000, ["five dinar"] = 2500, ["ten dinar"] = 5000, ["fifty dinar"] = 25000, ["hundred dinar"] = 50000, ["thousand dinar"] = 500000, ["toman"] = 5000000},
["Lancre"] = {["farthing"] = 3, ["ha'penny"] = 6, ["ha'pennies"] = 6, ["penny"] = 12, ["pennies"] = 12, ["tuppence"] = 24, ["thruppence"] = 36, ["sixpence"] = 72, ["shilling"] = 144, ["crown"] = 1728, ["tencrown"] = 17280, ["sovereign"] = 20736, ["hedgehog"] = 248832},
["Tsorte"] = {["para"] = 3, ["five para"] = 15, ["ten para"] = 30, ["five akche"] = 35, ["ten akche"] = 70, ["fifty para"] = 150 , ["kuru"] = 300, ["fifty akche"] = 350, ["dinar"] = 700, ["ten kuru"] = 3000, ["five dinar"] = 3500, ["ten dinar"] = 7000, ["lira"] = 30000, ["talent"] = 70000, ["ten lira"] = 300000, ["ten tyrant"] = 700000},
}

function ParseFenceOffer(sString, sReturnCity, sReturnCoins)
	if sReturnCity == nil then sReturnCity = "Ankh-Morpork" end
	if sReturnCoins == nil then sReturnCoins = "dollar" end
	local sWord = {}
	local iValue = 0

	local sEndMatch = "(%d+ .+) and (%d+ .+)"
	if string.match(sString, ",") ~= nil then
		sEndMatch = ", " .. sEndMatch
	end

	sSecondToLast, sLast = string.match(sString, sEndMatch)

	if sSecondToLast ~= nil and sLast ~= nil then
		sString = string.sub(sString, 1 , string.len(sString) - (string.len(sSecondToLast) + string.len(sLast)) + 5)
	else
		table.insert(sWord, sString)
	end

	for k in string.gmatch(sString,'%d+ .-,') do 
		table.insert(sWord, string.sub(k, 1, string.len(k)-1)) 
	end

	if sSecondToLast ~= nil and sLast ~= nil then
		table.insert(sWord, sSecondToLast)
		table.insert(sWord, sLast)
	end
	
	
	for _, v in ipairs(sWord) do
		local bMatched = false
		for City, _ in pairs (CoinValuesByCity) do
			for Coin, __ in pairs (CoinValuesByCity[City]) do
				local sMatchString = "(%d+) ("..City..") (" .. Coin .. ")s?"
				sMatchString = string.gsub(sMatchString, "%-", "%%-")
				

				iThisAmount, sThisCity, sThisCoinType = string.match(v, sMatchString)
				if iThisAmount ~= nil and sThisCity ~= nil and sThisCoinType ~= nil then
					bMatched = true
					iValue = iValue + (CoinValuesByCity[sThisCity][sThisCoinType] * iThisAmount)
					--break
				end
				if bMatched == true then break end
			end
			if bMatched == true then break end
		end
		if bMatched == false then
			--Note("Unmatched currency '".. v .. "', stoppping.")
			return "error"
		end
	end
	return tonumber(string.format("%.2f", iValue / CoinValuesByCity[sReturnCity][sReturnCoins]))
end

iTotal = 0
function CaptureFenceOffer (sName, sLine, wildcards, styles)
	local sOffer = ParseFenceOffer(wildcards.money, "Ankh-Morpork", "dollar") or "error"
	for _, v in ipairs (styles) do
		ColourTell(RGBColourToName (v.textcolour), RGBColourToName (v.backcolour), v.text)
	end
	if sOffer ~= "error" then
		local cNoteColour = cLowColour
		if sOffer >= iHighValue then
			cNoteColour = cHighColour
		elseif sOffer >= iMediumValue then
			cNoteColour = cMediumColour
		end
		if iTotal ~= 0 then
			iTotal = iTotal + tonumber(sOffer)
			iLastAdded = tonumber(sOffer)
			ColourNote(cNoteColour, "", " [A$" .. AddCommas(sOffer) .. " (Total: A$"..AddCommas(iTotal)..")]") 
		else
			ColourNote(cNoteColour, "", " [A$" .. AddCommas(sOffer) .. "]") 
			iTotal = iTotal + tonumber(sOffer)
			iLastAdded = tonumber(sOffer)
		end
	else
		Note("")
	end
end

function FenceNotAccepted (sName, sLine, wildcards, styles)
	if iTotal ~= 0 and iLastAdded ~= nil then
		iTotal = iTotal - iLastAdded
		if iTotal < 0 then
			iTotal = 0
		end
	end
end

function AddCommas(iNum) -- credit http://richard.warburton.it
	local left,num,right = string.match(iNum,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end

]]>
</script> 
<!--  Triggers  -->
<triggers> 
  <trigger
   keep_evaluating="y"
   omit_from_output="y"
   enabled="y"
   match="^(?P<fence>Dodgy Bill|Aristide Felon|Tiffany Glitter|Shifty Jim|Notorious Jones|Mariania|Ragman|Jak Raplin|Scrakkik|Sol|Klepton the Fixer|Elusive Adriano) whispers to you(?P<language>.+)?\: I'll give you (?P<money>.+) for (?P<item>.+), what do you think\?$"
   regexp="y"
   send_to="12"
   name="FenceOffer"
   sequence="15"
   script="CaptureFenceOffer"
  >
  <send>
  </send>
  </trigger>
  
  <trigger
   keep_evaluating="y"
   enabled="y"
   match="^(?P<fence>Dodgy Bill|Aristide Felon|Tiffany Glitter|Shifty Jim|Notorious Jones|Mariania|Ragman|Jak Raplin|Scrakkik|Sol|Klepton the Fixer|Elusive Adriano) returns the items? to you\.$"
   regexp="y"
   send_to="12"
   name="FenceReturn"
   sequence="15"
   script="FenceNotAccepted"
  >
  <send>
  </send>
  </trigger>
</triggers>
</muclient>
